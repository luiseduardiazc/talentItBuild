{"version":3,"sources":["components/Navbar.js","components/Layout.js","components/SelectTecnologies.js","utilities/config.js","pages/ScheduleInterviews.js","components/ShowCandidates.js","pages/SearchInterviews.js","pages/FilterCandidates.js","components/ScheduleInterviewModal.js","pages/ScheduleCandidates.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","React","Component","Layout","props","Fragment","children","SelectTecnologies","placeholder","key","value","valueTecnologies","onChange","handleChangeTecnology","options","optionsTecnologies","valuesItemTecnologies","handleChangeItemsTecnologies","optionsItemsTecnologies","isClearable","isMulti","pathname","state","params","numTecnologies","Options","Object","freeze","Microsoft","Oracle","config","label","microsofItems","oracleItems","values","optionsInterview","URL_EXTERNAL_API","ScheduleInterviews","selectedOption","setState","handleButtonSelect","even","preventDefault","console","log","length","showSelect","bind","this","ShowCandidates","onGridReady","gridApi","api","gridColumnApi","columnApi","onQuickFilterChanged","setQuickFilter","document","getElementById","columnDefs","headerName","field","minWidth","headerCheckboxSelection","headerCheckboxSelectionFilteredOnly","checkboxSelection","defaultColDef","flex","resizable","rowSelection","rowData","style","height","suppressRowClickSelection","onSelectionChanged","SearchInterviews","handleDate","date","startDate","showSpinner","showCandidates","placeholderText","showPopperArrow","selected","Spinner","animation","evenUsers","users","id","oddUsers","FilterCanditates","candidates","getSelectedRows","selectedCandidates","canditates","error","location","usersFiltered","getUser","filter","Promise","resolve","reject","fetch","then","response","json","data","catch","err","ScheduleInterviewModal","Button","variant","onClick","handleShow","Modal","show","onHide","handleClose","Header","closeButton","Title","Body","startTime","handleTime","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","timeFormat","dateFormat","interviewType","handleinterviewType","Footer","handleSave","ScheduleCandidates","candidate","canditateSelected","time","option","App","exact","path","component","FilterCandidates","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"wNAwBeA,E,uKAnBX,OACE,yBAAKC,UAAU,iDACb,wBAAIA,UAAU,sBACZ,4BACE,kBAAC,IAAD,CAAMA,UAAU,wBAAwBC,GAAG,KAA3C,YAIF,4BACE,kBAAC,IAAD,CAAMD,UAAU,wBAAwBC,GAAG,sBAA3C,oB,GAXSC,IAAMC,WCSZC,MATf,SAAgBC,GACd,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACCD,EAAME,W,gBCyCEC,MA7Cf,SAA2BH,GACzB,OACE,yBAAKL,UAAU,aACb,mDACA,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CACES,YAAa,0DACbC,IAAI,cACJC,MAAON,EAAMO,iBACbC,SAAUR,EAAMS,sBAChBC,QAASV,EAAMW,sBAGnB,yBAAKhB,UAAU,cACb,kBAAC,IAAD,CACES,YAAa,iDACbC,IAAI,mBACJC,MAAON,EAAMY,sBACbJ,SAAUR,EAAMa,6BAChBH,QAASV,EAAMc,wBACfC,aAAa,EACbC,SAAO,KAIVhB,EAAMY,uBACL,kBAAC,IAAD,CACEjB,UAAU,oBACVC,GAAI,CACFqB,SAAU,qBACVC,MAAO,CACLC,OAAQ,CACNC,eAAgBpB,EAAMY,0BAN9B,wBC9BJS,EAAUC,OAAOC,OAAO,CAC5BC,UAAW,IACXC,OAAQ,MAuCKC,EATA,CACbL,UACAV,mBA7ByB,CACzB,CAAEL,MAAOe,EAAQG,UAAWG,MAAO,kBACnC,CAAErB,MAAOe,EAAQI,OAAQE,MAAO,gBA4BhCC,cAzBoB,CACpB,CAAEtB,MAAO,EAAGqB,MAAO,WACnB,CAAErB,MAAO,EAAGqB,MAAO,QACnB,CAAErB,MAAO,EAAGqB,MAAO,WACnB,CAAErB,MAAO,EAAGqB,MAAO,oBACnB,CAAErB,MAAO,EAAGqB,MAAO,SAqBnBE,YAlBkB,CAClB,CAAEvB,MAAO,EAAGqB,MAAO,qBACnB,CAAErB,MAAO,EAAGqB,MAAO,qBACnB,CAAErB,MAAO,EAAGqB,MAAO,yBACnB,CAAErB,MAAO,EAAGqB,MAAO,wBACnB,CAAEG,OAAQ,EAAGH,MAAO,4BAcpBI,iBAXuB,CACvB,CAAEzB,MAAO,aAAcqB,MAAO,cAC9B,CAAErB,MAAO,aAAcqB,MAAO,cAC9B,CAAErB,MAAO,SAAUqB,MAAO,WAS1BK,iBAAkB,6CCuBLC,E,kDAxDb,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAeRS,sBAAwB,SAACyB,GACvB,EAAKC,SAAS,CAAE5B,iBAAkB2B,IAC9BA,EAAe5B,QAAUoB,EAAOL,QAAQG,UAC1C,EAAKW,SAAS,CACZrB,wBAAyBY,EAAOE,cAChChB,sBAAuB,OAEhBsB,EAAe5B,QAAUoB,EAAOL,QAAQI,QACjD,EAAKU,SAAS,CACZrB,wBAAyBY,EAAOG,YAChCjB,sBAAuB,QA1BV,EA+BnBC,6BAA+B,SAACqB,GAC9B,EAAKC,SAAS,CAAEvB,sBAAuBsB,KAhCtB,EAmCnBE,mBAAqB,SAACC,GACpBA,EAAKC,iBACLC,QAAQC,IAAI,EAAKtB,MAAMN,sBAAsB6B,SAnC7C,EAAKvB,MAAQ,CACXX,iBAAkB,KAClBK,sBAAuB,KACvBE,wBAAyB,GACzB4B,YAAY,GAGd,EAAKjC,sBAAwB,EAAKA,sBAAsBkC,KAA3B,gBAC7B,EAAK9B,6BAA+B,EAAKA,6BAA6B8B,KAAlC,gBAGpC,EAAKP,mBAAqB,EAAKA,mBAAmBO,KAAxB,gBAbT,E,qDAwCjB,OACE,6BACE,kBAAC,EAAD,CACEpC,iBAAkBqC,KAAK1B,MAAMX,iBAC7BE,sBAAuBmC,KAAKnC,sBAC5BE,mBAAoBe,EAAOf,mBAC3BC,sBAAuBgC,KAAK1B,MAAMN,sBAClCC,6BAA8B+B,KAAK/B,6BACnCC,wBAAyB8B,KAAK1B,MAAMJ,wBACpCsB,mBAAoBQ,KAAKR,0B,GAlDFvC,IAAMC,W,yBC0FxB+C,G,+DAxFb,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IA4DR8C,YAAc,SAAC3B,GACb,EAAK4B,QAAU5B,EAAO6B,IACtB,EAAKC,cAAgB9B,EAAO+B,WA/DX,EAkEnBC,qBAAuB,WACrB,EAAKJ,QAAQK,eAAeC,SAASC,eAAe,eAAehD,QAjEnE,EAAKY,MAAQ,CACXqC,WAAY,CACV,CACEC,WAAY,OACZC,MAAO,OACPC,SAAU,IACVC,yBAAyB,EACzBC,qCAAqC,EACrCC,mBAAmB,GAErB,CACEL,WAAY,QACZC,MAAO,QACPC,SAAU,KAEZ,CACEF,WAAY,SACZC,MAAO,kBAGT,CACED,WAAY,QACZC,MAAO,iBAGT,CACED,WAAY,OACZC,MAAO,gBAET,CACED,WAAY,UACZC,MAAO,mBAET,CACED,WAAY,MACZC,MAAO,mBAET,CACED,WAAY,MACZC,MAAO,oBAGXK,cAAe,CACbC,KAAM,EACNL,SAAU,IACVM,WAAW,GAEbC,aAAc,SACdC,QAAS,IAlDM,E,gEAuDjBtB,KAAKT,SAAS,CAAE+B,QAAStB,KAAK5C,MAAMkE,UAChCtB,KAAK5C,MAAMuD,YACbX,KAAKT,SAAS,CAAEoB,WAAYX,KAAK5C,MAAMuD,aACrCX,KAAK5C,MAAMiE,cACbrB,KAAKT,SAAS,CAAE8B,aAAcrB,KAAK5C,MAAMiE,iB,+BAY3C,OACE,yBAAKtE,UAAU,aACb,yBAAKA,UAAU,kBAAkBwE,MAAO,CAAEC,OAAQ,UAChD,kBAAC,cAAD,CACEb,WAAYX,KAAK1B,MAAMqC,WACvBO,cAAelB,KAAK1B,MAAM4C,cAC1BO,2BAA2B,EAC3BJ,aAAcrB,KAAK1B,MAAM+C,aACzBnB,YAAaF,KAAKE,YAClBwB,mBAAoB1B,KAAK5C,MAAMsE,mBAC/BJ,QAAStB,KAAK1B,MAAMgD,gB,GAlFHpE,c,QCDvByD,EAAa,CACjB,CACEC,WAAY,OACZC,MAAO,OACPC,SAAU,IACVC,yBAAyB,EACzBC,qCAAqC,EACrCC,mBAAmB,GAErB,CACEL,WAAY,QACZC,MAAO,QACPC,SAAU,KAEZ,CACEF,WAAY,SACZC,MAAO,kBAGT,CACED,WAAY,QACZC,MAAO,iBAGT,CACED,WAAY,OACZC,MAAO,gBAET,CACED,WAAY,UACZC,MAAO,mBAET,CACED,WAAY,MACZC,MAAO,mBAET,CACED,WAAY,MACZC,MAAO,oBA+CIc,E,kDA3Cb,WAAYvE,GAAQ,IAAD,8BACjB,cAAMA,IASRwE,WAAa,SAACC,GACZ,EAAKtC,SAAS,CAAEuC,UAAWD,IAC3B,EAAKtC,SAAS,CAAEwC,aAAa,KAV7B,EAAKzD,MAAQ,CACXwD,UAAW,KACXR,QAAS,KACTS,aAAa,EACbC,gBAAgB,GAND,E,qDAejB,OACE,yBAAKjF,UAAU,aACb,qDACA,yBAAKA,UAAU,cACb,kBAAC,IAAD,CACEA,UAAU,eACVkF,gBAAgB,mBAChBxE,IAAI,OACJyE,iBAAiB,EACjBC,SAAUnC,KAAK1B,MAAMwD,UACrBlE,SAAUoC,KAAK4B,cAGnB,yBAAK7E,UAAU,cACZiD,KAAK1B,MAAMyD,aAAe,kBAACK,EAAA,EAAD,CAASC,UAAU,UAEhD,6BACGrC,KAAK1B,MAAM0D,gBACV,kBAAC,EAAD,CACErB,WAAYA,EACZW,QAAStB,KAAK1B,MAAMgD,gB,GApCHrE,IAAMC,W,yBCzC/BoF,EAAY,SAACC,GAAD,OAAWA,EAAMC,GAAK,IAAM,GACxCC,EAAW,SAACF,GAAD,OAAWA,EAAMC,GAAK,IAAM,GA0E9BE,E,kDAvEb,WAAYtF,GAAQ,IAAD,8BACjB,cAAMA,IAkCRsE,mBAAqB,SAACnD,GACpB,IAAMoE,EAAapE,EAAO6B,IAAIwC,kBAC9B,EAAKrD,SAAS,CAAEsD,mBAAoBF,KAnCpC,EAAKrE,MAAQ,CACXwE,WAAY,GACZD,mBAAoB,GACpBE,OAAO,GALQ,E,2LAUTvE,EAAmBwB,KAAK5C,MAAM4F,SAAS1E,MAAMC,OAA7CC,eACJyE,EAAgB,G,kBAGAjD,KAAKkD,U,OAAnBX,E,OAEFU,EADEzE,EAAeqB,OAAS,IAAM,EAChB0C,EAAMY,OAAOb,GAEbC,EAAMY,OAAOV,GAE/BzC,KAAKT,SAAS,CAAEuD,WAAYG,I,kDAE5BjD,KAAKT,SAAS,CAAEwD,OAAO,I,gJAKzB,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,MAAMzE,EAAOM,kBACVoE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUN,EAAQM,MACvBC,OAAM,SAACC,GAAD,OAASP,EAAOO,W,+BAU3B,OACE,6BACG7D,KAAK1B,MAAMwE,WAAWjD,OAAS,GAC9B,kBAAC,EAAD,CACEyB,QAAStB,KAAK1B,MAAMwE,WACpBzB,aAAa,WACbK,mBAAoB1B,KAAK0B,qBAG7B,yBAAK3E,UAAU,aACZiD,KAAK1B,MAAMuE,mBAAmBhD,OAAS,GACtC,kBAAC,IAAD,CACE9C,UAAU,oBACVC,GAAI,CACFqB,SAAU,uBACVC,MAAO,CACLC,OAAQ,CACNsE,mBAAoB7C,KAAK1B,MAAMuE,uBANvC,4B,GArDmB5F,IAAMC,W,gBC0DtB4G,MA5Df,SAAgC1G,GAC9B,OACE,oCACE,kBAAC2G,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAAS7G,EAAM8G,YAAtC,sBAIA,kBAACC,EAAA,EAAD,CAAOC,KAAMhH,EAAMgH,KAAMC,OAAQjH,EAAMkH,YAAajC,WAAW,GAC7D,kBAAC8B,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMM,MAAP,4BAEF,kBAACN,EAAA,EAAMO,KAAP,KACE,yBAAK3H,UAAU,cACb,kBAAC,IAAD,CACEA,UAAU,eACVkF,gBAAgB,mBAChBxE,IAAI,OACJyE,iBAAiB,EACjBC,SAAU/E,EAAM0E,UAChBlE,SAAUR,EAAMwE,cAIpB,yBAAK7E,UAAU,cACb,kBAAC,IAAD,CACEA,UAAU,eACVU,IAAI,OACJwE,gBAAgB,kBAChBE,SAAU/E,EAAMuH,UAChB/G,SAAUR,EAAMwH,WAChBC,gBAAc,EACdC,oBAAkB,EAClBC,cAAe,GACfC,YAAY,OACZC,WAAW,QACXC,WAAW,WAGf,yBAAKnI,UAAU,cACb,kBAAC,IAAD,CACES,YAAa,8DACbE,MAAON,EAAM+H,cACbvH,SAAUR,EAAMgI,oBAChBtH,QAASV,EAAM+B,qBAIrB,kBAACgF,EAAA,EAAMkB,OAAP,KACE,kBAACtB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS7G,EAAMkH,aAA3C,UAGA,kBAACP,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS7G,EAAMkI,YAAzC,eC6BKC,E,kDA/Eb,WAAYnI,GAAQ,IAAD,8BACjB,cAAMA,IAeRsE,mBAAqB,SAACnD,GACpB,IAAMiH,EAAYjH,EAAO6B,IAAIwC,kBAC7B,EAAKrD,SAAS,CAAEkG,kBAAmBD,KAlBlB,EAqBnBtB,WAAa,WACX,EAAK3E,SAAS,CAAE6E,MAAM,IACtB,EAAK7E,SAAS,CAAEoF,UAAW,OAC3B,EAAKpF,SAAS,CAAEuC,UAAW,OAC3B,EAAKvC,SAAS,CAAE4F,cAAe,QAzBd,EA4BnBb,YAAc,WACZ,EAAK/E,SAAS,CAAE6E,MAAM,KA7BL,EAgCnBkB,WAAa,WACX3F,QAAQC,IAAI,QACZ,EAAK0E,eAlCY,EAqCnBM,WAAa,SAACc,GACZ,EAAKnG,SAAS,CAAEoF,UAAWe,KAtCV,EAyCnB9D,WAAa,SAACC,GACZ,EAAKtC,SAAS,CAAEuC,UAAWD,KA1CV,EA6CnBuD,oBAAsB,SAACO,GACrB,EAAKpG,SAAS,CAAE4F,cAAeQ,KA5C/B,EAAKrH,MAAQ,CACXwE,WAAY,GACZ2C,kBAAmB,GACnBrB,MAAM,EACNO,UAAW,KACX7C,UAAW,KACXqD,cAAe,MARA,E,gEAWE,IACXtC,EAAuB7C,KAAK5C,MAAM4F,SAAS1E,MAAMC,OAAjDsE,mBACR7C,KAAKT,SAAS,CAAEuD,WAAYD,M,+BAoC5B,OACE,6BACG7C,KAAK1B,MAAMwE,WAAWjD,OAAS,GAC9B,kBAAC,EAAD,CACEyB,QAAStB,KAAK1B,MAAMwE,WACpBzB,aAAa,SACbK,mBAAoB1B,KAAK0B,qBAG5B1B,KAAK1B,MAAMmH,kBAAkB5F,OAAS,GACrC,yBAAK9C,UAAU,aACb,kBAAC,EAAD,CACEqH,KAAMpE,KAAK1B,MAAM8F,KACjBF,WAAYlE,KAAKkE,WACjBI,YAAatE,KAAKsE,YAClBgB,WAAYtF,KAAKsF,WACjBX,UAAW3E,KAAK1B,MAAMqG,UACtBC,WAAY5E,KAAK4E,WACjB9C,UAAW9B,KAAK1B,MAAMwD,UACtBF,WAAY5B,KAAK4B,WACjBzC,iBAAkBL,EAAOK,iBACzBiG,oBAAqBpF,KAAKoF,oBAC1BD,cAAenF,KAAK1B,MAAM6G,sB,GAxEPlI,IAAMC,WCqBxB0I,MAnBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1G,IACjC,kBAAC,IAAD,CAAOwG,OAAK,EAACC,KAAK,qBAAqBC,UAAWpE,IAClD,kBAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,qBAAqBC,UAAWC,IAClD,kBAAC,IAAD,CACEH,OAAK,EACLC,KAAK,uBACLC,UAAWR,QCNHU,QACW,cAA7BC,OAAOlD,SAASmD,UAEe,UAA7BD,OAAOlD,SAASmD,UAEhBD,OAAOlD,SAASmD,SAASC,MACvB,2D,cCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9F,SAASC,eAAe,SDuHpB,kBAAmB8F,WACrBA,UAAUC,cAAcC,MACrBlD,MAAK,SAAAmD,GACJA,EAAaC,gBAEdhD,OAAM,SAAAb,GACLpD,QAAQoD,MAAMA,EAAM8D,a","file":"static/js/main.be27a236.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li>\r\n            <Link className=\"nav-link navbar-brand\" to=\"/\">\r\n              Agendar\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link className=\"nav-link navbar-brand\" to=\"/search-interviews\">\r\n              Consultar\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport Navbar from \"../components/Navbar\";\n\nfunction Layout(props) {\n  return (\n    <React.Fragment>\n      <Navbar />\n      {props.children}\n    </React.Fragment>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction SelectTecnologies(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Agendar Entrevistas</h2>\r\n      <div className=\"selectTecnologies\">\r\n        <div className=\"form-group\">\r\n          <Select\r\n            placeholder={<div>Seleccione una Tecnologia</div>}\r\n            key=\"tecnologies\"\r\n            value={props.valueTecnologies}\r\n            onChange={props.handleChangeTecnology}\r\n            options={props.optionsTecnologies}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Select\r\n            placeholder={<div>Seleccione Items</div>}\r\n            key=\"itemsTecnologies\"\r\n            value={props.valuesItemTecnologies}\r\n            onChange={props.handleChangeItemsTecnologies}\r\n            options={props.optionsItemsTecnologies}\r\n            isClearable={false}\r\n            isMulti\r\n          />\r\n        </div>\r\n\r\n        {props.valuesItemTecnologies && (\r\n          <Link\r\n            className=\"btn btn-secondary\"\r\n            to={{\r\n              pathname: \"/filter-candidates\",\r\n              state: {\r\n                params: {\r\n                  numTecnologies: props.valuesItemTecnologies,\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            Buscar Candidatos\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SelectTecnologies;\r\n","const Options = Object.freeze({\r\n  Microsoft: \"1\",\r\n  Oracle: \"2\",\r\n});\r\n\r\nconst optionsTecnologies = [\r\n  { value: Options.Microsoft, label: \"Microsoft .Net\" },\r\n  { value: Options.Oracle, label: \"Oracle Java\" },\r\n];\r\n\r\nconst microsofItems = [\r\n  { value: 1, label: \"Asp.Net\" },\r\n  { value: 2, label: \"MVVM\" },\r\n  { value: 3, label: \"Ado.Net\" },\r\n  { value: 4, label: \"Entity FrameWork\" },\r\n  { value: 5, label: \"LinQ\" },\r\n];\r\n\r\nconst oracleItems = [\r\n  { value: 1, label: \"Java Server Pages\" },\r\n  { value: 2, label: \"Java Server Faces\" },\r\n  { value: 3, label: \"Enterprise Java Beans\" },\r\n  { value: 4, label: \"Java Persistence Api\" },\r\n  { values: 5, label: \"Java Messaging Services\" },\r\n];\r\n\r\nconst optionsInterview = [\r\n  { value: \"presencial\", label: \"Presencial\" },\r\n  { value: \"telefonica\", label: \"Telefonica\" },\r\n  { value: \"remota\", label: \"Remota\" },\r\n];\r\n\r\nconst config = {\r\n  Options,\r\n  optionsTecnologies,\r\n  microsofItems,\r\n  oracleItems,\r\n  optionsInterview,\r\n  URL_EXTERNAL_API: \"http://jsonplaceholder.typicode.com/users\",\r\n};\r\n\r\nexport default config;\r\n","import React from \"react\";\r\nimport SelectTecnologies from \"../components/SelectTecnologies\";\r\nimport config from \"../utilities/config\";\r\n\r\nclass ScheduleInterviews extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      valueTecnologies: null,\r\n      valuesItemTecnologies: null,\r\n      optionsItemsTecnologies: [],\r\n      showSelect: true,\r\n    };\r\n\r\n    this.handleChangeTecnology = this.handleChangeTecnology.bind(this);\r\n    this.handleChangeItemsTecnologies = this.handleChangeItemsTecnologies.bind(\r\n      this\r\n    );\r\n    this.handleButtonSelect = this.handleButtonSelect.bind(this);\r\n  }\r\n\r\n  handleChangeTecnology = (selectedOption) => {\r\n    this.setState({ valueTecnologies: selectedOption });\r\n    if (selectedOption.value === config.Options.Microsoft) {\r\n      this.setState({\r\n        optionsItemsTecnologies: config.microsofItems,\r\n        valuesItemTecnologies: null,\r\n      });\r\n    } else if (selectedOption.value === config.Options.Oracle) {\r\n      this.setState({\r\n        optionsItemsTecnologies: config.oracleItems,\r\n        valuesItemTecnologies: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChangeItemsTecnologies = (selectedOption) => {\r\n    this.setState({ valuesItemTecnologies: selectedOption });\r\n  };\r\n\r\n  handleButtonSelect = (even) => {\r\n    even.preventDefault();\r\n    console.log(this.state.valuesItemTecnologies.length);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SelectTecnologies\r\n          valueTecnologies={this.state.valueTecnologies}\r\n          handleChangeTecnology={this.handleChangeTecnology}\r\n          optionsTecnologies={config.optionsTecnologies}\r\n          valuesItemTecnologies={this.state.valuesItemTecnologies}\r\n          handleChangeItemsTecnologies={this.handleChangeItemsTecnologies}\r\n          optionsItemsTecnologies={this.state.optionsItemsTecnologies}\r\n          handleButtonSelect={this.handleButtonSelect}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScheduleInterviews;\r\n","import React, { Component } from \"react\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\r\n\r\nclass ShowCandidates extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnDefs: [\r\n        {\r\n          headerName: \"Name\",\r\n          field: \"name\",\r\n          minWidth: 180,\r\n          headerCheckboxSelection: true,\r\n          headerCheckboxSelectionFilteredOnly: true,\r\n          checkboxSelection: true,\r\n        },\r\n        {\r\n          headerName: \"Email\",\r\n          field: \"email\",\r\n          minWidth: 200,\r\n        },\r\n        {\r\n          headerName: \"Street\",\r\n          field: \"address.street\",\r\n        },\r\n\r\n        {\r\n          headerName: \"Suite\",\r\n          field: \"address.suite\",\r\n        },\r\n\r\n        {\r\n          headerName: \"City\",\r\n          field: \"address.city\",\r\n        },\r\n        {\r\n          headerName: \"Zipcode\",\r\n          field: \"address.zipcode\",\r\n        },\r\n        {\r\n          headerName: \"Lat\",\r\n          field: \"address.geo.lat\",\r\n        },\r\n        {\r\n          headerName: \"Lng\",\r\n          field: \"address.geo.lng\",\r\n        },\r\n      ],\r\n      defaultColDef: {\r\n        flex: 1,\r\n        minWidth: 100,\r\n        resizable: true,\r\n      },\r\n      rowSelection: \"single\",\r\n      rowData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ rowData: this.props.rowData });\r\n    if (this.props.columnDefs)\r\n      this.setState({ columnDefs: this.props.columnDefs });\r\n    if (this.props.rowSelection)\r\n      this.setState({ rowSelection: this.props.rowSelection });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  };\r\n\r\n  onQuickFilterChanged = () => {\r\n    this.gridApi.setQuickFilter(document.getElementById(\"quickFilter\").value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"ag-theme-alpine\" style={{ height: \"350px\" }}>\r\n          <AgGridReact\r\n            columnDefs={this.state.columnDefs}\r\n            defaultColDef={this.state.defaultColDef}\r\n            suppressRowClickSelection={true}\r\n            rowSelection={this.state.rowSelection}\r\n            onGridReady={this.onGridReady}\r\n            onSelectionChanged={this.props.onSelectionChanged}\r\n            rowData={this.state.rowData}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ShowCandidates;\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport ShowCandidates from \"../components/ShowCandidates\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Name\",\r\n    field: \"name\",\r\n    minWidth: 180,\r\n    headerCheckboxSelection: false,\r\n    headerCheckboxSelectionFilteredOnly: false,\r\n    checkboxSelection: false,\r\n  },\r\n  {\r\n    headerName: \"Email\",\r\n    field: \"email\",\r\n    minWidth: 200,\r\n  },\r\n  {\r\n    headerName: \"Street\",\r\n    field: \"address.street\",\r\n  },\r\n\r\n  {\r\n    headerName: \"Suite\",\r\n    field: \"address.suite\",\r\n  },\r\n\r\n  {\r\n    headerName: \"City\",\r\n    field: \"address.city\",\r\n  },\r\n  {\r\n    headerName: \"Zipcode\",\r\n    field: \"address.zipcode\",\r\n  },\r\n  {\r\n    headerName: \"Lat\",\r\n    field: \"address.geo.lat\",\r\n  },\r\n  {\r\n    headerName: \"Lng\",\r\n    field: \"address.geo.lng\",\r\n  },\r\n];\r\nclass SearchInterviews extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startDate: null,\r\n      rowData: null,\r\n      showSpinner: false,\r\n      showCandidates: false,\r\n    };\r\n  }\r\n\r\n  handleDate = (date) => {\r\n    this.setState({ startDate: date });\r\n    this.setState({ showSpinner: true });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h4>Consultar Entrevistas</h4>\r\n        <div className=\"form-group\">\r\n          <DatePicker\r\n            className=\"form-control\"\r\n            placeholderText=\"Seleccione Fecha\"\r\n            key=\"Date\"\r\n            showPopperArrow={false}\r\n            selected={this.state.startDate}\r\n            onChange={this.handleDate}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          {this.state.showSpinner && <Spinner animation=\"grow\" />}\r\n        </div>\r\n        <div>\r\n          {this.state.showCandidates && (\r\n            <ShowCandidates\r\n              columnDefs={columnDefs}\r\n              rowData={this.state.rowData}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SearchInterviews;\r\n","import React from \"react\";\r\nimport config from \"../utilities/config\";\r\nimport ShowCandidates from \"../components/ShowCandidates\";\r\nimport { Link } from \"react-router-dom\";\r\nconst evenUsers = (users) => users.id % 2 === 0;\r\nconst oddUsers = (users) => users.id % 2 !== 0;\r\n\r\nclass FilterCanditates extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      canditates: [],\r\n      selectedCandidates: [],\r\n      error: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { numTecnologies } = this.props.location.state.params;\r\n    let usersFiltered = [];\r\n\r\n    try {\r\n      let users = await this.getUser();\r\n      if (numTecnologies.length % 2 === 0) {\r\n        usersFiltered = users.filter(evenUsers);\r\n      } else {\r\n        usersFiltered = users.filter(oddUsers);\r\n      }\r\n      this.setState({ canditates: usersFiltered });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(config.URL_EXTERNAL_API)\r\n        .then((response) => response.json())\r\n        .then((data) => resolve(data))\r\n        .catch((err) => reject(err));\r\n    });\r\n  }\r\n\r\n  onSelectionChanged = (params) => {\r\n    const candidates = params.api.getSelectedRows();\r\n    this.setState({ selectedCandidates: candidates });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.canditates.length > 0 && (\r\n          <ShowCandidates\r\n            rowData={this.state.canditates}\r\n            rowSelection=\"multiple\"\r\n            onSelectionChanged={this.onSelectionChanged}\r\n          />\r\n        )}\r\n        <div className=\"container\">\r\n          {this.state.selectedCandidates.length > 0 && (\r\n            <Link\r\n              className=\"btn btn-secondary\"\r\n              to={{\r\n                pathname: \"/schedule-candidates\",\r\n                state: {\r\n                  params: {\r\n                    selectedCandidates: this.state.selectedCandidates,\r\n                  },\r\n                },\r\n              }}\r\n            >\r\n              Agendar Candidatos\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FilterCanditates;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Select from \"react-select\";\r\nfunction ScheduleInterviewModal(props) {\r\n  return (\r\n    <>\r\n      <Button variant=\"info\" onClick={props.handleShow}>\r\n        Agendar Entrevista\r\n      </Button>\r\n\r\n      <Modal show={props.show} onHide={props.handleClose} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Agendar Entrevista</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"form-group\">\r\n            <DatePicker\r\n              className=\"form-control\"\r\n              placeholderText=\"Seleccione Fecha\"\r\n              key=\"Date\"\r\n              showPopperArrow={false}\r\n              selected={props.startDate}\r\n              onChange={props.handleDate}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <DatePicker\r\n              className=\"form-control\"\r\n              key=\"Hour\"\r\n              placeholderText=\"Seleccione Hora\"\r\n              selected={props.startTime}\r\n              onChange={props.handleTime}\r\n              showTimeSelect\r\n              showTimeSelectOnly\r\n              timeIntervals={15}\r\n              timeCaption=\"Time\"\r\n              timeFormat=\"HH:mm\"\r\n              dateFormat=\"HH:mm\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Select\r\n              placeholder={<div>Seleccione Tipo de Entrevista</div>}\r\n              value={props.interviewType}\r\n              onChange={props.handleinterviewType}\r\n              options={props.optionsInterview}\r\n            />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.handleClose}>\r\n            Cerrar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={props.handleSave}>\r\n            Guardar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ScheduleInterviewModal;\r\n","import React from \"react\";\r\nimport ShowCandidates from \"../components/ShowCandidates\";\r\nimport ScheduleInterviewModal from \"../components/ScheduleInterviewModal\";\r\nimport config from \"../utilities/config\";\r\n\r\nclass ScheduleCandidates extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      canditates: [],\r\n      canditateSelected: [],\r\n      show: false,\r\n      startTime: null,\r\n      startDate: null,\r\n      interviewType: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { selectedCandidates } = this.props.location.state.params;\r\n    this.setState({ canditates: selectedCandidates });\r\n  }\r\n\r\n  onSelectionChanged = (params) => {\r\n    const candidate = params.api.getSelectedRows();\r\n    this.setState({ canditateSelected: candidate });\r\n  };\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n    this.setState({ startTime: null });\r\n    this.setState({ startDate: null });\r\n    this.setState({ interviewType: null });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  handleSave = () => {\r\n    console.log(\"Save\");\r\n    this.handleClose();\r\n  };\r\n\r\n  handleTime = (time) => {\r\n    this.setState({ startTime: time });\r\n  };\r\n\r\n  handleDate = (date) => {\r\n    this.setState({ startDate: date });\r\n  };\r\n\r\n  handleinterviewType = (option) => {\r\n    this.setState({ interviewType: option });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.canditates.length > 0 && (\r\n          <ShowCandidates\r\n            rowData={this.state.canditates}\r\n            rowSelection=\"single\"\r\n            onSelectionChanged={this.onSelectionChanged}\r\n          />\r\n        )}\r\n        {this.state.canditateSelected.length > 0 && (\r\n          <div className=\"container\">\r\n            <ScheduleInterviewModal\r\n              show={this.state.show}\r\n              handleShow={this.handleShow}\r\n              handleClose={this.handleClose}\r\n              handleSave={this.handleSave}\r\n              startTime={this.state.startTime}\r\n              handleTime={this.handleTime}\r\n              startDate={this.state.startDate}\r\n              handleDate={this.handleDate}\r\n              optionsInterview={config.optionsInterview}\r\n              handleinterviewType={this.handleinterviewType}\r\n              interviewType={this.state.interviewType}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ScheduleCandidates;\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Layout from \"../components/Layout\";\nimport ScheduleInterviews from \"../pages/ScheduleInterviews\";\nimport SearchInterviews from \"../pages/SearchInterviews\";\nimport FilterCandidates from \"../pages/FilterCandidates\";\nimport ScheduleCandidates from \"../pages/ScheduleCandidates\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={ScheduleInterviews} />\n          <Route exact path=\"/search-interviews\" component={SearchInterviews} />\n          <Route exact path=\"/filter-candidates\" component={FilterCandidates} />\n          <Route\n            exact\n            path=\"/schedule-candidates\"\n            component={ScheduleCandidates}\n          />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}